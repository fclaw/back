{
    "sourceFile": "nix/build.nix",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1686319691381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686319699740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         repo = \"Haskell-OpenAPI-Client-Code-Generator\";\n         rev = \"3a2b41fb4e26d47ab9ca64711565dafedf961a3e\";\n         sha256 = \"sha256-b7sVdv0NWgC7cqKhduNZOYMroMagzvSu0cqItOJP5yg=\";\n         };\n-      buildInputs = [pkgs.stack pkgs.llvm pkgs.haskell.compiler.ghc90];\n+      buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       buildPhase = ''\n         mkdir -p $out/openapi3\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n       '';\n"
                },
                {
                    "date": 1686320370617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n-        stack install\n+        stack --local-bin-path $out/bin buil\n       '';\n     };\n \n in\n"
                },
                {
                    "date": 1686320376034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n-        stack --local-bin-path $out/bin buil\n+        stack --local-bin-path $out/bin build \n       '';\n     };\n \n in\n"
                },
                {
                    "date": 1686320513892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n-        stack --local-bin-path $out/bin build \n+        stack --local-bin-path $out/bin --copy-bins build \n       '';\n     };\n \n in\n"
                },
                {
                    "date": 1686320527608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       buildPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-gh build --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n         stack --local-bin-path $out/bin --copy-bins build \n"
                },
                {
                    "date": 1686321196543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       buildPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-gh build --fast -j12 openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n         stack --local-bin-path $out/bin --copy-bins build \n"
                },
                {
                    "date": 1686321206212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       buildPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin --fast -j12 openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n         mkdir -p $out/bin\n         stack --local-bin-path $out/bin --copy-bins build \n"
                },
                {
                    "date": 1686321211893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n         rev = \"3a2b41fb4e26d47ab9ca64711565dafedf961a3e\";\n         sha256 = \"sha256-b7sVdv0NWgC7cqKhduNZOYMroMagzvSu0cqItOJP5yg=\";\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n-      buildPhase = ''\n+      installPhase = ''\n         mkdir -p $out/openapi3\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n       '';\n       installPhase = ''\n"
                },
                {
                    "date": 1686321217490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,8 @@\n       installPhase = ''\n         mkdir -p $out/openapi3\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n       '';\n-      installPhase = ''\n-        mkdir -p $out/bin\n-        stack --local-bin-path $out/bin --copy-bins build \n-      '';\n     };\n \n in\n pkgs.mkShell {\n"
                },
                {
                    "date": 1686321235440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       installPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install --fast -j12 openapi3-code-generator\n       '';\n     };\n \n in\n"
                },
                {
                    "date": 1686321242605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       installPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install --fast -j12 openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin --fast -j12  openapi3-code-generator\n       '';\n     };\n \n in\n"
                },
                {
                    "date": 1686321255346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,14 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       installPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin --fast -j12  openapi3-code-generator\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n       '';\n+      installPhase = ''\n+        mkdir -p $out/bin\n+        stack --local-bin-path $out/bin --copy-bins build \n+      '';\n     };\n \n in\n pkgs.mkShell {\n"
                },
                {
                    "date": 1686321276091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+let\n+  sources = import ./sources.nix;\n+  pkgs = import sources.nixpkgs { };\n+in\n+let\n+  # Wrap Stack to configure Nix integration and target the correct Stack-Nix file\n+  #\n+  # - nix: Enable Nix support\n+  # - no-nix-pure: Pass environment variables, like `NIX_PATH`\n+  # - nix-shell-file: Specify the Nix file to use (otherwise it uses `shell.nix` by default)\n+  stack-wrapped = pkgs.symlinkJoin {\n+    name = \"stack\";\n+    paths = [ pkgs.stack ];\n+    buildInputs = [ pkgs.makeWrapper ];\n+    postBuild = ''\n+      wrapProgram $out/bin/stack \\\n+        --add-flags \"\\\n+          --nix \\\n+          --no-nix-pure \\\n+          --nix-shell-file=nix/stack-integration.nix \\\n+        \"\n+    '';\n+  };\n+\n+  openapi3-code-generator = \n+    pkgs.stdenv.mkDerivation {\n+      name = \"openapi3-code-generator\";\n+      # fetchFromGitHub is a build support function that fetches a GitHub\n+      # repository and extracts into a directory; so we can use it\n+      # fetchFromGithub is actually a derivation itself :)\n+      src = pkgs.fetchFromGitHub {\n+        owner = \"Haskell-OpenAPI-Code-Generator\";\n+        repo = \"Haskell-OpenAPI-Client-Code-Generator\";\n+        rev = \"3a2b41fb4e26d47ab9ca64711565dafedf961a3e\";\n+        sha256 = \"sha256-b7sVdv0NWgC7cqKhduNZOYMroMagzvSu0cqItOJP5yg=\";\n+        };\n+      buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n+      installPhase = ''\n+        mkdir -p $out/openapi3\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12\n+      '';\n+      installPhase = ''\n+        mkdir -p $out/bin\n+        stack --local-bin-path $out/bin --copy-bins build \n+      '';\n+    };\n+\n+in\n+pkgs.mkShell {\n+  buildInputs = [\n+    stack-wrapped \n+    openapi3-code-generator\n+  ];\n+  # Configure the Nix path to our own `pkgs`, to ensure Stack-with-Nix uses the correct one rather than the global <nixpkgs> when looking for the right `ghc` argument to pass in `nix/stack-integration.nix`\n+  # See https://nixos.org/nixos/nix-pills/nix-search-paths.html for more information\n+  NIX_PATH = \"nixpkgs=\" + pkgs.path;\n+  shellHook =\n+  '' echo \"Welcome to server shell!!\"\n+  '';\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686321281882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,8 @@\n       installPhase = ''\n         mkdir -p $out/openapi3\n         stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12\n       '';\n-      installPhase = ''\n-        mkdir -p $out/bin\n-        stack --local-bin-path $out/bin --copy-bins build \n-      '';\n     };\n \n in\n pkgs.mkShell {\n@@ -56,65 +52,5 @@\n   NIX_PATH = \"nixpkgs=\" + pkgs.path;\n   shellHook =\n   '' echo \"Welcome to server shell!!\"\n   '';\n-}\n-let\n-  sources = import ./sources.nix;\n-  pkgs = import sources.nixpkgs { };\n-in\n-let\n-  # Wrap Stack to configure Nix integration and target the correct Stack-Nix file\n-  #\n-  # - nix: Enable Nix support\n-  # - no-nix-pure: Pass environment variables, like `NIX_PATH`\n-  # - nix-shell-file: Specify the Nix file to use (otherwise it uses `shell.nix` by default)\n-  stack-wrapped = pkgs.symlinkJoin {\n-    name = \"stack\";\n-    paths = [ pkgs.stack ];\n-    buildInputs = [ pkgs.makeWrapper ];\n-    postBuild = ''\n-      wrapProgram $out/bin/stack \\\n-        --add-flags \"\\\n-          --nix \\\n-          --no-nix-pure \\\n-          --nix-shell-file=nix/stack-integration.nix \\\n-        \"\n-    '';\n-  };\n-\n-  openapi3-code-generator = \n-    pkgs.stdenv.mkDerivation {\n-      name = \"openapi3-code-generator\";\n-      # fetchFromGitHub is a build support function that fetches a GitHub\n-      # repository and extracts into a directory; so we can use it\n-      # fetchFromGithub is actually a derivation itself :)\n-      src = pkgs.fetchFromGitHub {\n-        owner = \"Haskell-OpenAPI-Code-Generator\";\n-        repo = \"Haskell-OpenAPI-Client-Code-Generator\";\n-        rev = \"3a2b41fb4e26d47ab9ca64711565dafedf961a3e\";\n-        sha256 = \"sha256-b7sVdv0NWgC7cqKhduNZOYMroMagzvSu0cqItOJP5yg=\";\n-        };\n-      buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n-      installPhase = ''\n-        mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12 openapi3-code-generator\n-      '';\n-      installPhase = ''\n-        mkdir -p $out/bin\n-        stack --local-bin-path $out/bin --copy-bins build \n-      '';\n-    };\n-\n-in\n-pkgs.mkShell {\n-  buildInputs = [\n-    stack-wrapped \n-    openapi3-code-generator\n-  ];\n-  # Configure the Nix path to our own `pkgs`, to ensure Stack-with-Nix uses the correct one rather than the global <nixpkgs> when looking for the right `ghc` argument to pass in `nix/stack-integration.nix`\n-  # See https://nixos.org/nixos/nix-pills/nix-search-paths.html for more information\n-  NIX_PATH = \"nixpkgs=\" + pkgs.path;\n-  shellHook =\n-  '' echo \"Welcome to server shell!!\"\n-  '';\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686321950793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         };\n       buildInputs = [pkgs.stack pkgs.llvm pkgs.glib pkgs.haskell.compiler.ghc90];\n       installPhase = ''\n         mkdir -p $out/openapi3\n-        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install  --fast -j12\n+        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin install --fast -j12\n       '';\n     };\n \n in\n"
                }
            ],
            "date": 1686319691381,
            "name": "Commit-0",
            "content": "let\n  sources = import ./sources.nix;\n  pkgs = import sources.nixpkgs { };\nin\nlet\n  # Wrap Stack to configure Nix integration and target the correct Stack-Nix file\n  #\n  # - nix: Enable Nix support\n  # - no-nix-pure: Pass environment variables, like `NIX_PATH`\n  # - nix-shell-file: Specify the Nix file to use (otherwise it uses `shell.nix` by default)\n  stack-wrapped = pkgs.symlinkJoin {\n    name = \"stack\";\n    paths = [ pkgs.stack ];\n    buildInputs = [ pkgs.makeWrapper ];\n    postBuild = ''\n      wrapProgram $out/bin/stack \\\n        --add-flags \"\\\n          --nix \\\n          --no-nix-pure \\\n          --nix-shell-file=nix/stack-integration.nix \\\n        \"\n    '';\n  };\n\n  openapi3-code-generator = \n    pkgs.stdenv.mkDerivation {\n      name = \"openapi3-code-generator\";\n      # fetchFromGitHub is a build support function that fetches a GitHub\n      # repository and extracts into a directory; so we can use it\n      # fetchFromGithub is actually a derivation itself :)\n      src = pkgs.fetchFromGitHub {\n        owner = \"Haskell-OpenAPI-Code-Generator\";\n        repo = \"Haskell-OpenAPI-Client-Code-Generator\";\n        rev = \"3a2b41fb4e26d47ab9ca64711565dafedf961a3e\";\n        sha256 = \"sha256-b7sVdv0NWgC7cqKhduNZOYMroMagzvSu0cqItOJP5yg=\";\n        };\n      buildInputs = [pkgs.stack pkgs.llvm pkgs.haskell.compiler.ghc90];\n      buildPhase = ''\n        mkdir -p $out/openapi3\n        stack --stack-root $out/openapi3 --verbosity info --system-ghc --local-bin-path $out/bin build --fast -j12 openapi3-code-generator\n      '';\n      installPhase = ''\n        mkdir -p $out/bin\n        stack install\n      '';\n    };\n\nin\npkgs.mkShell {\n  buildInputs = [\n    stack-wrapped \n    openapi3-code-generator\n  ];\n  # Configure the Nix path to our own `pkgs`, to ensure Stack-with-Nix uses the correct one rather than the global <nixpkgs> when looking for the right `ghc` argument to pass in `nix/stack-integration.nix`\n  # See https://nixos.org/nixos/nix-pills/nix-search-paths.html for more information\n  NIX_PATH = \"nixpkgs=\" + pkgs.path;\n  shellHook =\n  '' echo \"Welcome to server shell!!\"\n  '';\n}"
        }
    ]
}