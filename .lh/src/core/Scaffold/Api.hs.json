{
    "sourceFile": "src/core/Scaffold/Api.hs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1686322782175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686322788443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n        , AuthApi (..)\n        , FrontendApi (..)\n        , UserApi (..)\n        , PublicApi (..)\n-       , send\n+       , SendGridApi (..)\n        , api\n        , swaggerHttpApi\n        ) where\n \n"
                }
            ],
            "date": 1686322782175,
            "name": "Commit-0",
            "content": "{-# LANGUAGE DataKinds     #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE DerivingStrategies #-}\n{-# LANGUAGE DeriveGeneric #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE OverloadedLabels #-}\n{-# LANGUAGE TypeApplications #-}\n\nmodule Scaffold.Api\n       ( Api (..)\n       , HttpApi (..)\n       , FileApi (..)\n       , AdminApi (..)\n       , AuthApi (..)\n       , FrontendApi (..)\n       , UserApi (..)\n       , PublicApi (..)\n       , send\n       , api\n       , swaggerHttpApi\n       ) where\n\nimport Scaffold.Api.Map\n\nimport BuildInfo\nimport Servant.API\nimport Servant.API.Generic\nimport Data.Proxy\nimport Servant.Swagger\nimport Data.Swagger\nimport Control.Lens\nimport Control.Lens.Iso.Extended\nimport Servant.Swagger.RawM ()\nimport Servant.Auth.Swagger ()\nimport Servant.Ip\n\nnewtype Api route = Api { _apiHttp :: route :- ToServant HttpWrapperApi AsApi } deriving stock Generic\n\nnewtype HttpWrapperApi route =\n        HttpWrapperApi\n        { _httpWrapperApiApi\n          :: route\n          :- Description \"http api\"\n          :> \"api\"\n          :> HeaderIP\n          :> ToServant HttpApi AsApi\n        } deriving stock Generic\n\napi :: Proxy (ToServantApi Api)\napi = genericApi (Proxy :: Proxy Api)\n\nswaggerHttpApi :: String -> Int -> Version -> Swagger\nswaggerHttpApi hs port ver =\n  toSwagger (genericApi (Proxy @HttpWrapperApi))\n  & schemes ?~ [Http, Https]\n  & host ?~ Host hs (Just (fromIntegral port))\n  & info.description ?~ \"Scaffold server api\"^.stext\n  & info.version .~ show ver^.stext\n  & info.contact ?~ Contact Nothing Nothing (Just (\"fclaw007@gmail.com\"^.stext))\n  & info.title .~ \"Scaffold. Tag (\" <> $gitTag <> \"). Commit (\" <> $gitCommit <> \")\""
        }
    ]
}